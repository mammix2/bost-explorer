/*
  This file must be valid JSON. But comments are allowed

  Please edit settings.json, not settings.json.template
*/
{
  // name your instance!
  "title": "BOST Explorer",
  
  "address": "http://explorer.bost.link",
  
  // coin name
  "coin": "BoostCoin",

  // coin symbol
  "symbol": "BOST",
  
  // logo
  "logo": "/images/logo.png",

  // favicon
  "favicon": "public/favicon.ico",
  
  // Uses bootswatch themes (http://bootswatch.com/)
  // Valid options: 
  //     Cerulean, Cosmo, Cyborg, Darkly, Flatly, Journal, Lumen, Paper, 
  //     Readable, Sandstone, Simplex, Slate, Spacelab, Superhero, United, Yeti
  // theme (see /public/themes for available themes)
  "theme": "Slate",

  // port to listen for requests on.
  "port" : 8080,

  // database settings (MongoDB)
  "dbsettings": {
    "user": "bost001",
    "password": "Ctstwe123",
    "database": "bostDB1",
    "address": "localhost",
    "port": 27017
  },
  
  //update script settings
  "update_timeout": 10,
  "check_timeout": 250,

  // wallet settings
  "wallet": {
    "host": "localhost",
    "port": 11112,
    "user": "bost001",
    "pass": "Password!234"
  },
  
  // confirmations
  "confirmations": 5,

  // language settings
  "locale": "locale/en.json",

  // menu settings
  "display": {
    "api": true,
    "markets": false,
    "richlist": true,
    "twitter": true,
    "facebook": false,
    "googleplus": false,
    "search": true,
    "movement": true,
    "network": true
  },

  // index page (valid options for difficulty are POW, POS or Hybrid)
  "index": {
    "show_hashrate": false,
    "difficulty": "Hybrid",
    "last_txs": 100
  },
  
  // ensure links on API page are valid
  "api": {
    "blockindex": 10000,
    "blockhash": "000000000d0d85fcccc2c8e1e36ade1427006ec7ebdac9f9d7499c11251bb1fc",
    "txhash": "0019bbbbd33b12e21d66c36541341ca7879c15e9c9e3c619030d3ce15d1a5008",
    "address": "BKqAh5ojyS7bkjaDHJEWXxMwKNUvUsNZak"
  },
  
  // market settings
  //supported markets: bittrex, poloniex, yobit, empoex, bleutrade, cryptopia, ccex
  //default market is loaded by default and determines last price in header
  "markets": {
    "coin": "bost",
    "exchange": "cny",
    "enabled": ["btc38"],
    "cryptopia_id": "1658",
    "ccex_key" : "021AE80138A8ED71F8D30AED3BAAF8A1",
    "default": "btc38"
  },

  // richlist/top100 settings
  "richlist": {
    "distribution": true,
    "received": true,
    "balance": true
  },
  // movement page settings
  // min amount: show transactions greater than this value
  // low flag: greater than this value flagged yellow
  // high flag: greater than this value flagged red
  "movement": {
    "min_amount": 100,
    "low_flag": 1000,
    "high_flag": 5000
  },

  // twitter, facebook, googleplus
  "twitter": "mammix2",
  "facebook": "yourfacebookpage",
  "googleplus": "yourgooglepluspage",

  //genesis
  "genesis_tx": "603add6547a4c67f12f5a5fb5100fb455e3515b05e58a44a29a4496f7fcaaaf7",
  "genesis_block": "00000e81cae8e8cbbf9679d53ff1df5e23062dc667a332fd121f86e68f5d25e3",  

  //heavy (enable/disable additional heavy features)
  "heavy": false,

  //amount of txs to index per address (stores latest n txs)
  "txcount": 100,

  //show total sent & received on address page (set false if PoS)
  "show_sent_received": false,
  
  // how to calculate current coin supply
  // COINBASE : total sent from coinbase (PoW)
  // GETINFO : retreive from getinfo api call (PoS)
  // HEAVY: retreive from heavys getsupply api call
  // BALANCES : total of all address balances
  // TXOUTSET : retreive from gettxoutsetinfo api call
  "supply": "GETINFO",

  // how to acquire network hashrate
  // getnetworkhashps: uses getnetworkhashps api call, returns in GH/s
  // netmhashps: uses getmininginfo.netmhashpsm returns in MH/s
  "nethash": "getnetworkhashps",
  
  // nethash unitd: sets nethash API return units
  // valid options: "P" (PH/s), "T" (TH/s), "G" (GH/s), "M" (MH/s), "K" (KH/s)
  "nethash_units": "M",

  // Address labels
  // example : "JhbrvAmM7kNpwA6wD5KoAsbtikLWWMNPcM": {"label": "This is a burn address", "type":"danger", "url":"http://example.com"} 
  // label (required) = test to display
  // type (optional) = class of label, valid types: default, primary, warning, danger, success
  // url (optional) = url to link to for more information 
  "labels": {
  //  "BKqAh5ojyS7bkjaDHJEWXxMwKNUvUsNZak": {"label": "Developer address", "type":"primary", "url":"http://bost.link"},
  //  "JSWVXHWeYNknPdG9uDrcBoZHztKMFCsndw": {"label": "Cryptsy"}
  }
}
